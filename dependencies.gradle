allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

ext {
    // APP VERSION
    androidVersionCode          = 5
    androidVersionName          = '1.1.0'

    // ANDROID VERSION
    androidCompileSdkVersion    = 31
    androidMinSdkVersion        = 19
    androidTargetSdkVersion     = androidCompileSdkVersion

    // DEFAULT INFO
    packageAndroidJUnitRunner   = "androidx.test.runner.AndroidJUnitRunner"
    defaultFlavorDimensions     = "default"

    // KOTLIN
    kotlinStdlib                = "org.jetbrains.kotlin:kotlin-stdlib:${ext.kotlin_version}"

    // ANDROID LIB
    androidXCoreVersion         = '1.7.0'
    androidXVersion             = '1.4.1'
    androidXPreferenceVersion   = '1.2.0'
    androidXRecyclerviewVersion = '1.2.1'
    androidXSwipeRefreshVersion = '1.1.0'
    materialVersion             = '1.6.0'
    constraintLayoutVersion     = '2.1.4'
    multidexVersion             = '2.0.1'
    androidXCore                = "androidx.core:core:$androidXCoreVersion"
    androidXAppCompat           = "androidx.appcompat:appcompat:$androidXVersion"
    androidXPreference          = "androidx.preference:preference-ktx:$androidXPreferenceVersion"
    androidXRecyclerView        = "androidx.recyclerview:recyclerview:$androidXRecyclerviewVersion"
    androidXSwipeRefresh        = "androidx.swiperefreshlayout:swiperefreshlayout:$androidXSwipeRefreshVersion"
    materialDesign              = "com.google.android.material:material:$materialVersion"
    constraintLayout            = "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    multidex                    = "androidx.multidex:multidex:$multidexVersion"

    // COMPONENTS
    roomVersion                 = '2.4.2'
    room                        = "androidx.room:room-runtime:$roomVersion"
    roomCompiler                = "androidx.room:room-compiler:$roomVersion"

    // DAGGER
    daggerVersion               = '2.42'
    dagger                      = "com.google.dagger:dagger:$daggerVersion"
    daggerCompiler              = "com.google.dagger:dagger-compiler:$daggerVersion"

    // RX
    rxAndroidVersion            = '3.0.0'
    rxJavaVersion               = '3.1.4'
    rxKotlinVersion             = '3.0.1'
    rxBindingVersion            = '4.0.0'
    rxAndroid                   = "io.reactivex.rxjava3:rxandroid:$rxAndroidVersion"
    rxJava                      = "io.reactivex.rxjava3:rxjava:$rxJavaVersion"
    rxKotlin                    = "io.reactivex.rxjava3:rxkotlin:$rxKotlinVersion"
    rxBinding                   = "com.jakewharton.rxbinding4:rxbinding:$rxBindingVersion"
    rxBindingSwipeRefreshlayout = "com.jakewharton.rxbinding4:rxbinding-swiperefreshlayout:$rxBindingVersion"

    // WEBSERVICES
    retrofitVersion             = '2.9.0'
    okHttpVersion               = '3.11.0'
    retrofitConverterGson       = "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    retrofitAdapterRxJava       = "com.squareup.retrofit2:adapter-rxjava3:$retrofitVersion"

    // DEBUG
    timberVersion               = '5.0.1'
    chuckVersion                = '1.1.0'
    timber                      = "com.jakewharton.timber:timber:$timberVersion"
    chuckDebug                  = "com.readystatesoftware.chuck:library:$chuckVersion"
    chuckRelease                = "com.readystatesoftware.chuck:library-no-op:$chuckVersion"

    // TEST
    junitVersion                = '4.13.2'
    mockitoVersion              = '4.5.1'
    mockitoKotlinVersion        = '2.2.0'
    junit                       = "junit:junit:$junitVersion"
    mockitoInline               = "org.mockito:mockito-inline:$mockitoVersion"
    mockitoKotlin               = "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"

    // ANDROID TEST
    androidXTestVersion         = '1.4.0'
    androidXTestJunitVersion    = '1.1.3'
    espressoVersion             = '3.4.0'
    multidexInstVersion         = '2.0.0'
    androidXTestRunner          = "androidx.test:runner:$androidXTestVersion"
    androidXTestJunit           = "androidx.test.ext:junit:$androidXTestJunitVersion"
    androidXTestRules           = "androidx.test:rules:$androidXTestVersion"
    espressoCore                = "androidx.test.espresso:espresso-core:$espressoVersion"
    espressoIntents             = "androidx.test.espresso:espresso-intents:$espressoVersion"
    espressoContrib             = "androidx.test.espresso:espresso-contrib:$espressoVersion"
    multidexInstrumentation     = "androidx.multidex:multidex-instrumentation:$multidexInstVersion"

    // PROGUARD
    proguardFolder              = '../proguard/'
    modelRules                  = proguardFolder + 'model-rules.pro'
    supportRules                = proguardFolder + 'support-rules.pro'
    apacheRules                 = proguardFolder + 'apache-rules.pro'
    gsonRules                   = proguardFolder + 'gson-rules.pro'
    okhttp3Rules                = proguardFolder + 'okhttp3-rules.pro'
    retrofit2Rules              = proguardFolder + 'retrofit2-rules.pro'

    // DEPENDENCY CHECK STRATEGY
    dependencyUpdatesStrategy = {
        def isNonStable = { String version ->
            def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { keyword ->
                version.toUpperCase().contains(keyword)
            }
            def regex = /^[0-9,.v-]+(-r)?$/
            return !stableKeyword && !(version ==~ regex)
        }
        componentSelection {
            all {
                if (isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)) {
                    reject('Release candidate')
                }
            }
        }
    }
}